{"version":3,"sources":["_boiler.scss","_variables.scss","_grid.scss","../../node_modules/bourbon/app/assets/stylesheets/functions/_px-to-rem.scss","styles/_header.scss"],"names":[],"mappings":"AAAA,8DAA8D;AAE9D;EACI,YAAY;EACZ,eAAe;EACf,iBAAiB,EACpB;;AAED;EACI,oBAAoB;EACpB,kBAAkB,EACrB;;AAED;EACI,oBAAoB;EACpB,kBAAkB,EACrB;;AAED;EACI,eAAe;EACf,YAAY;EACZ,UAAU;EACV,2BAA2B;EAC3B,cAAc;EACd,WAAW,EACd;;AAED;;;;;;EAMI,uBAAuB,EAC1B;;AAED;EACI,UAAU;EACV,UAAU;EACV,WAAW,EACd;;AAED;EACI,iBAAiB,EACpB;;AAED;EACI,gBAAgB;EAChB,iBAAiB;EACjB,YAAY;EACZ,iBAAiB,EACpB;;AAGD;;gFAEgF;AAgBhF;;gFAEgF;AAahF;;gFAEgF;AAEhF;EACI,yBAAyB;EACzB,mBAAmB,EACtB;;AAED;EACI,UAAU;EACV,oBAAU;EACV,YAAY;EACZ,aAAa;EACb,iBAAiB;EACjB,WAAW;EACX,mBAAmB;EACnB,WAAW,EACd;;AAED;;EAEI,WAAW;EACX,aAAa;EACb,UAAU;EACV,kBAAkB;EAClB,iBAAiB;EACjB,YAAY,EACf;;AAED;EACI,mBAAmB,EACtB;;AAED;;EAEI,aAAa;EACb,eAAe,EAClB;;AAED;EACI,YAAY,EACf;;AAED;GACI,QAAS,EACZ;;AAED;;gFAEgF;AAEhF;EACI;;;IAGI,mCAAmC;IACnC,uBAAuB;IACvB,4BAA4B;IAC5B,6BAA6B,EAChC;EAED;;IAEI,2BAA2B,EAC9B;EAED;IACI,6BAA4B,EAC/B;EAED;IACI,8BAA6B,EAChC;EAED;;IAEI,YAAY,EACf;EAED;;IAEI,uBAAuB;IACvB,yBAAyB,EAC5B;EAED;IACI,4BAA4B,EAC/B;EAED;;IAEI,yBAAyB,EAC5B;EAED;IACI,2BAA2B,EAC9B;EAED;;;IAGI,WAAW;IACX,UAAU,EACb;EAED;;IAEI,wBAAwB,EAC3B,EAAA;;ACnKL;EACE,sBAAc;EAAd,qBAAc;EAAd,cAAc;EAEd,4BAAoB;MAApB,wBAAoB;UAApB,oBAAoB;EACpB,6BAAqB;MAArB,wBAAqB;UAArB,qBAAqB,EACtB;;AAED;EACE,0BAhCkB,EAiCnB;;ACtCD;EACE,cAAc,EACf;;AAED;EACE,mBAAmB;EACnB,kBAAkB;EAClB,eCEe;EDDf,kBCCe,EDKhB;EDCG;ICXJ;MAOI,iBAAmB;MACnB,WAAW,EAEd,EAAA;;AAED;EACE,iBAAiB,EAClB;;AAED;EACE,4BAAoB;MAApB,wBAAoB;UAApB,oBAAoB;EACpB,iBAAiB;EACjB,kBAAkB;EAClB,kBCfe;EDgBf,iBAAiB;EAEjB,uCAA+B;MAA/B,uBAA+B;UAA/B,+BAA+B,EAChC;;AEhCD;EACE,0BHSoB,EGRrB","file":"main.css","sourcesContent":["/*! HTML5 Boilerplate v5.0 | MIT License | http://h5bp.com/ */\r\n\r\nhtml {\r\n    color: #222;\r\n    font-size: 1em;\r\n    line-height: 1.4;\r\n}\r\n\r\n::-moz-selection {\r\n    background: #b3d4fc;\r\n    text-shadow: none;\r\n}\r\n\r\n::selection {\r\n    background: #b3d4fc;\r\n    text-shadow: none;\r\n}\r\n\r\nhr {\r\n    display: block;\r\n    height: 1px;\r\n    border: 0;\r\n    border-top: 1px solid #ccc;\r\n    margin: 1em 0;\r\n    padding: 0;\r\n}\r\n\r\naudio,\r\ncanvas,\r\niframe,\r\nimg,\r\nsvg,\r\nvideo {\r\n    vertical-align: middle;\r\n}\r\n\r\nfieldset {\r\n    border: 0;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\ntextarea {\r\n    resize: vertical;\r\n}\r\n\r\n.browserupgrade {\r\n    margin: 0.2em 0;\r\n    background: #ccc;\r\n    color: #000;\r\n    padding: 0.2em 0;\r\n}\r\n\r\n\r\n/* ==========================================================================\r\n   Author's custom styles\r\n   ========================================================================== */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* ==========================================================================\r\n   Media Queries\r\n   ========================================================================== */\r\n\r\n@media only screen and (min-width: 35em) {\r\n\r\n}\r\n\r\n@media print,\r\n       (-o-min-device-pixel-ratio: 5/4),\r\n       (-webkit-min-device-pixel-ratio: 1.25),\r\n       (min-resolution: 120dpi) {\r\n\r\n}\r\n\r\n/* ==========================================================================\r\n   Helper classes\r\n   ========================================================================== */\r\n\r\n.hidden {\r\n    display: none !important;\r\n    visibility: hidden;\r\n}\r\n\r\n.visuallyhidden {\r\n    border: 0;\r\n    clip: rect(0 0 0 0);\r\n    height: 1px;\r\n    margin: -1px;\r\n    overflow: hidden;\r\n    padding: 0;\r\n    position: absolute;\r\n    width: 1px;\r\n}\r\n\r\n.visuallyhidden.focusable:active,\r\n.visuallyhidden.focusable:focus {\r\n    clip: auto;\r\n    height: auto;\r\n    margin: 0;\r\n    overflow: visible;\r\n    position: static;\r\n    width: auto;\r\n}\r\n\r\n.invisible {\r\n    visibility: hidden;\r\n}\r\n\r\n.clearfix:before,\r\n.clearfix:after {\r\n    content: \" \";\r\n    display: table;\r\n}\r\n\r\n.clearfix:after {\r\n    clear: both;\r\n}\r\n\r\n.clearfix {\r\n    *zoom: 1;\r\n}\r\n\r\n/* ==========================================================================\r\n   Print styles\r\n   ========================================================================== */\r\n\r\n@media print {\r\n    *,\r\n    *:before,\r\n    *:after {\r\n        background: transparent !important;\r\n        color: #000 !important;\r\n        box-shadow: none !important;\r\n        text-shadow: none !important;\r\n    }\r\n\r\n    a,\r\n    a:visited {\r\n        text-decoration: underline;\r\n    }\r\n\r\n    a[href]:after {\r\n        content: \" (\" attr(href) \")\";\r\n    }\r\n\r\n    abbr[title]:after {\r\n        content: \" (\" attr(title) \")\";\r\n    }\r\n\r\n    a[href^=\"#\"]:after,\r\n    a[href^=\"javascript:\"]:after {\r\n        content: \"\";\r\n    }\r\n\r\n    pre,\r\n    blockquote {\r\n        border: 1px solid #999;\r\n        page-break-inside: avoid;\r\n    }\r\n\r\n    thead {\r\n        display: table-header-group;\r\n    }\r\n\r\n    tr,\r\n    img {\r\n        page-break-inside: avoid;\r\n    }\r\n\r\n    img {\r\n        max-width: 100% !important;\r\n    }\r\n\r\n    p,\r\n    h2,\r\n    h3 {\r\n        orphans: 3;\r\n        widows: 3;\r\n    }\r\n\r\n    h2,\r\n    h3 {\r\n        page-break-after: avoid;\r\n    }\r\n}\r\n","$fa-font-path: '../../build/fonts';\r\n\r\n$breakpoints: (\n  'small'  : ( max-width:  767px ),\n  'medium' : ( max-width:  992px ),\n  'large'  : ( max-width: 1200px )\n);\n\n// Background colors\n$main-color: #f3f3f3;\r\n$header-color: #e1e1e1;\r\n$third-color: #e84c3d;\r\n\r\n// Mixins\n\n@mixin breakpoint($name) {\n  // If the key exists in the map\n  @if map-has-key($breakpoints, $name) {\n    // Prints a media query based on the value\n    @media #{inspect(map-get($breakpoints, $name))} {\n      @content;\n    }\n  }\n\n  // If the key doesn't exist in the map\n  @else {\n    @warn \"Unfortunately, no value could be retrieved from `#{$breakpoint}`. \"\n        + \"Please make sure it is defined in `$breakpoints` map.\";\n  }\n}\n\n// Global things\n\n.flex {\r\n  display: flex;\r\n\n  flex-flow: row wrap;\r\n  align-items: stretch;\r\n}\r\n\r\n.primary-mod {\r\n  background-color: $main-color;\r\n}\r\n","$nav-width: rem(1096px);\r\n$nav-height: rem(87px);\n$menu-width: rem(507px);\n\r\n.b-header {\r\n  height: 799px;\r\n}\r\n\r\n.nav-wrap {\n  margin-right: auto;\r\n  margin-left: auto;\r\n  width: $nav-width;\n  height: $nav-height;\n\n  @include breakpoint(large){\n    height: $nav-height/1.5;\n    width: 95%;\n  }\n}\n\n.logo {\n  margin-top: auto;\n}\r\n\r\n.menu {\r\n  flex-direction: row;\r\n  margin-top: auto;\n  margin-left: auto;\n  width: $menu-width;\n  list-style: none;\r\n\n  justify-content: space-between;\n}\r\n","// Convert pixels to rems\n// eg. for a relational value of 12px write rem(12)\n// Assumes $em-base is the font-size of <html>\n\n@function rem($pxval) {\n  @if not unitless($pxval) {\n    $pxval: strip-units($pxval);\n  }\n\n  $base: $em-base;\n  @if not unitless($base) {\n    $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1rem;\n}\n",".b-header_mod {\r\n  background-color: $header-color;\r\n}\r\n\n.menu__item {\r\n\r\n}\r\n\r\n.menu__link {\r\n}\r\n"],"sourceRoot":"/source/"}